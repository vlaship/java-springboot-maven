name: CI Pipeline

on:
  push:
    branches:
      - '**'
  pull_request:
    branches:
      - 'main'
  workflow_dispatch:

permissions:
  contents: read
  packages: write

jobs:
  # build-and-test:
  #   runs-on: ubuntu-latest

  #   steps:
  #     - uses: actions/checkout@v4

  #     - name: Set up JDK 21
  #       uses: actions/setup-java@v4
  #       with:
  #         java-version: '21'
  #         distribution: 'temurin'
  #         cache: maven
  #         cache-dependency-path: '**/pom.xml'

  #     - name: Cache Maven packages
  #       uses: actions/cache@v4
  #       with:
  #         path: |
  #           ~/.m2/repository
  #           !~/.m2/repository/io/github/vlaship
  #         key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
  #         restore-keys: |
  #           ${{ runner.os }}-maven-

  #     - name: Build and test with Maven
  #       run: mvn -B verify --file pom.xml

  docker-build:
    # needs: build-and-test
    runs-on: ubuntu-latest
    if: github.event_name == 'push' || github.event_name == 'pull_request'

    steps:
      - uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build JVM Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          push: false
          tags: myapp:latest
          outputs: type=docker,dest=/tmp/book-catalog-service.tar

      - name: Upload Docker image as an artifact
        uses: actions/upload-artifact@v4
        with:
          name: docker-image
          path: /tmp/book-catalog-service.tar

  docker-push:
    needs: docker-build
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'

    steps:
      - name: Download Docker image artifact
        uses: actions/download-artifact@v4
        with:
          name: docker-image
          path: /tmp

      - name: Load Docker image from artifact
        run: docker load --input /tmp/book-catalog-service.tar

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GHCR_PAT }}

      - name: Push Docker image to GitHub Container Registry
        run: |
          docker tag book-catalog-service:latest ghcr.io/${{ github.repository_owner }}/${{ github.event.repository.name }}:latest
          docker push ghcr.io/${{ github.repository_owner }}/${{ github.event.repository.name }}:latest
